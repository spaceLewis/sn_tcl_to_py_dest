T >>-Linked-Fri-Jan-11-12:20:24-2013
D -12 PWM-Register
E EPWM1AQCSFRC 16bit_0x680E 5208 14
E EPWM1AQCTLA  16bit_0x680B 5208 11
E EPWM1AQCTLB  16bit_0x680C 5208 12
E EPWM1AQSFRC  16bit_0x680D 5208 13
E EPWM1CMPA    16bit_0x6809 5208 9
E EPWM1CMPAHR  16bit_0x6808 5208 8
E EPWM1CMPB    16bit_0x680A 5208 10
E EPWM1CMPCTL  16bit_0x6807 5208 7
D -1 Variablen
E _ActionInfo  16bit_0x0000be08 5380 8
E _ActionInfo  32bit_0x0000be08 6380 8
E _admParam    16bit_0x0000befc 5381 124
E _admParam    32bit_0x0000befc 6381 124
E _ATuningParam 16bit_0x0000c13a 5386 58
E _ATuningParam 32bit_0x0000c13a 6386 58
E _auiMotEncSerialNumber 16bit_0x0000c0ac 5385 44
E _auiMotEncSerialNumber 32bit_0x0000c0ac 6385 44
E _bAmpOff_OnEnd 16bit_0x0000c143 5386 67
E __cleanup_ptr 16bit_0x0000c200 5388 0
E __cleanup_ptr 32bit_0x0000c200 6388 0
E __dtors_ptr  16bit_0x0000c202 5388 2
E __dtors_ptr  32bit_0x0000c202 6388 2
E __lock       16bit_0x0000c1fc 5387 124
E __lock       32bit_0x0000c1fc 6387 124
E __unlock     16bit_0x0000c1fa 5387 122
E __unlock     32bit_0x0000c1fa 6387 122
# Structures CPD
# Fri Jan 11 12:20:29 2013
#
#  (): not found
#
# ============ Interface_to_drive_component (0) ============
# CBasDrive {
#   struct  __b_CBasComponent {
#     unknown* __vptr : 0
#   }
#   struct  ToDrvCtrl {
#     UINT16   uiOpmRequest : 2
#     UINT16   uiAxModeInt : 3
#     INT32    lPosRef : 4
#     UINT16   uiPosRefRem : 6
#     INT32    i64BlshOffsPos : 8
#     INT32    lSpdRef : 12
#     INT32    lCurRef : 14
#     INT32    lSpdFeed : 16
#     INT32    lAccFeed : 18
#     INT32    lSpdLim : 20
#     INT32    lCurLim : 22
#     UINT16   bDoSpeedLimVar2 : 24
#     UINT16   bDoSwitchControlPara : 25
#     UINT16   bDoSpeedIntegralOff : 26
#     UINT16   bDoZeroClamp : 27
#     UINT32   ulActiveInFctBitCoded : 28
#     UINT16   uiBreakMotionActive : 30
#   }
#   struct  FromDrvCtrl {
#     INT32    lPosAct : 32
#     INT32    lITotalAct : 34
#     INT32    lIqAct : 36
#     INT32    lUkzAct : 38
#     UINT16   uiActionWordUser : 40
#     UINT16   uiStatus : 41
#     UINT16   uiUsrStateInfos : 42
#     UINT16   uiCmdRequest : 43
#     UINT16   uiPowerState : 44
#     INT32    iqImax : 46
#     UINT16   uiImaxPerCent : 48
#     INT32    iqImaxQStop : 50
#     INT32    iqImaxHalt : 52
#     UINT32   ulNmax : 54
#     UINT32   ulVelMaxIntern : 56
#     UINT16   bAbPosIsSet : 58
#     UINT16   bEnc1PosIsSet : 59
#     INT32*   iqpUkzFlt : 60
#     INT32*   iqpIqAct : 62
#     INT32*   iqpIqRef : 64
#     INT32*   iqpSpdPrRef : 66
#     INT32*   iqpSpeedRef : 68
#     INT32*   iqpPosRef : 70
#     INT32*   iqpPosDif : 72
#     UINT16   bSelErrIsSet : 74
#     UINT16   bSelWarnIsSet : 75
#     INT32    lRs422InCnt : 76
#     UINT16   uiRs422Fine : 78
#     UINT16   uiRefPulseCalcState : 79
#     INT32    lVelRs422Act_Inc_65536ms : 80
#     INT32    iqSpeedMax : 82
#   }
# };
#
# ============ CDrvWakeShake (99) ============
# CDrvWakeShake {
#   UINT16   m_uiWakeShakeState : 0
#   INT32    m_iqStartSpeedLimWakes : 2
#   INT32    m_iqEpsE_wakes : 4
#   INT32    m_iqUdWakes : 6
#   INT32    m_iqUqWakes : 8
#   INT32    m_iqIdWakes : 10
#   INT32    m_iqIqWakes : 12
#   INT32    m_iqKdWakes : 14
#   INT32    m_iqKpWakes : 16
#   INT32    m_iqKiWakes : 18
#   INT32    m_iqKdWakes0 : 20
#   INT32    m_iqKpWakes0 : 22
#   INT32    m_iqKiWakes0 : 24
#   INT32    m_iqTei : 26
#   INT32    m_iqKpPart : 28
#   INT32    m_iqKiPart : 30
#   INT32    m_iqKdPart : 32
#   INT32    m_iqKpPartCorrection : 34
#   INT32    m_iqEpsWakesDif : 36
#   INT32    m_iqEpsWakesStart : 38
#   INT32    m_iqEpsWakesEnd : 40
#   INT32    m_iqEpsEwakesFltEnd : 42
#   INT32    m_iqEpsEwakesDifEnd : 44
#   INT32    m_iqEpsEwakesFlt : 46
#   INT32    m_iqKeepKiId : 48
#   INT32    m_iqKeepKiIq : 50
#   UINT16   m_uiSlidingGain : 52
#   UINT16   m_uiSlidingShift : 53
#   UINT16   m_uiWakesCnt : 54
#   UINT16   m_uiPhasingOffset : 55
#   UINT16   m_uiTauNactRemind : 56
#   UINT16   m_uiTaunactWakes : 57
#   INT32    m_iqUmagRefWakes : 58
#   INT32    m_iqUmagRefWakes0 : 60
#   INT32    m_iqImagWakes0 : 62
#   INT32    m_iqIdWakes_0 : 64
#   INT32    m_iqImagWakesMax : 66
#   INT32    m_uiKpImagReduction : 68
#   UINT32   m_ulAccAbility : 70
#   UINT16   m_uiMassRatio : 72
#   UINT32   m_ulSliderMass : 74
#   UINT16   m_uiWakesGain : 76
#   INT32    m_iqCurrentMeanEnd : 78
#   INT32    m_iqCurrentMaxEnd : 80
#   INT32    m_iqCurrentMinEnd : 82
#   INT32    m_iqCurrentSum : 84
#   INT32    m_iqEpsEwakesFltMinPosEnd : 86
#   INT32    m_iqEpsEwakesFltMinNegEnd : 88
#   INT32    m_iqEpsEwakesFltMaxPosEnd : 90
#   INT32    m_iqEpsEwakesFltMaxNegEnd : 92
#   INT32    m_iqKdManAdaption : 94
#   INT32    m_iqKpManAdaption : 96
#   INT32    m_iqKiManAdaption : 98
# };
#
# ============ CHwlPowerFail (100) ============
# CHwlPowerFail {
#   UINT16   m_uiPowerLowState : 0
#   UINT16   m_uiPowerLowTimeBuff : 1
#   UINT16   m_uiPowerLowTimeUnBuff : 2
# };
#
# ============ CAxfBackLashComp (101) ============
# CAxfBackLashComp {
#   UINT16   m_bitDoCycFctCall : 0
#   UINT16   m_uiStartParaIntern : 1
#   UINT16   m_lBackLashCorrFastCycleCnt : 2
#   INT32    m_i64BackLashCorrPosIntern : 4
#   INT32    m_i64TargetOffsetPos : 8
#   INT32    m_i64CurrentOffsetPos : 12
#   INT32    m_i64CycChgOfOffsetPos : 16
# };
#
# ============ bootDSS (102) ============
# BOOT_DSS {
#   UINT32   ulWarmstart : 0
#   UINT16   uiBootIdent : 2
#   UINT16   uiPrgState : 3
#   UINT32   ulPrgNr : 4
#   UINT32   errCode : 6
#   UINT16   errInfo : 8
# };
#